"""
Attributes for creating or updating an Organization appearance.
"""
type Appearance {
  """
  URL to the Favicon image.
  """
  favicon: String

  """
  The color of the header background.
  """
  headerBackgroundColor: String!

  """
  The color of the header text.
  """
  headerTextColor: String!

  """
  Toggle for hiding viewership metric.
  """
  hideViewershipMetric: Boolean!

  """
  URL to the logo image.
  """
  logo: String

  """
  The style of navigation links.
  """
  navigationLinkCase: NavigationLinkOption!
}

"""
Attributes for creating or updating an Organization appearance.
"""
input AppearanceInput {
  """
  URL to the Favicon image.
  """
  favicon: String

  """
  The color of the header background.
  """
  headerBackgroundColor: String!

  """
  The color of the header text.
  """
  headerTextColor: String!

  """
  Toggle for hiding viewership metric.
  """
  hideViewershipMetric: Boolean

  """
  URL to the logo image.
  """
  logo: String

  """
  The style of navigation links.
  """
  navigationLinkCase: NavigationLinkOption!
}

"""
Autogenerated return type of DeleteOrganization
"""
type DeleteOrganizationPayload {
  """
  A list of errors that occured when trying to delete the organization.
  """
  errors: [Error!]!

  """
  The deleted Organization.
  """
  organization: Organization
}

enum EmailConsentType {
  """
  Ask all users if they consent to be emailed.
  """
  ALL

  """
  Only ask EU users if they consent to be emailed.
  """
  EU

  """
  Do not ask any user for consent to be emailed,
  """
  OFF
}

"""
Represents an error within the system
"""
type Error {
  """
  The error code
  """
  code: String!

  """
  The error message
  """
  message: String

  """
  The property the error occurred on
  """
  property: String

  """
  The ID of the request
  """
  requestId: String
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Represents a navigation link for an organization
"""
type Link {
  """
  If it is a default link
  """
  default: Boolean!

  """
  The id of the link
  """
  id: ID!

  """
  The unique ID for the link
  """
  key: String!

  """
  The Label for the link
  """
  label: String!
}

"""
Attributes for adding/editing a navigation link for an organization
"""
input LinkInput {
  """
  The Label for the link.
  """
  label: String!

  """
  The URL to send the user to.
  """
  url: String!
}

type Mutation {
  """
  Delete an Organization.
  """
  deleteOrganization(
    """
    The ID of the organization to delete.
    """
    id: ID!
  ): DeleteOrganizationPayload

  """
  Request prayer
  """
  requestPrayerDep(
    """
    The input for requesting prayer
    """
    input: RequestPrayerInput
  ): Success!

  """
  Create or update an Organization.
  """
  saveOrganization(
    """
    The fields to update on the Organization
    """
    input: OrganizationInput!
  ): SaveOrganizationPayload
}

enum NavigationLinkOption {
  """
  Title Case
  """
  TITLE

  """
  Upper Case
  """
  UPPER
}

"""
Represents offline content
"""
interface OfflineContent {
  """
  The content source
  """
  source: String

  """
  The offline content type
  """
  type: OfflineContentType!

  """
  The content url
  """
  url: String
}

"""
Attributes for updating offline content.
"""
input OfflineContentInput {
  """
  The offline content video options
  """
  options: VideoOptionsInput

  """
  The content source
  """
  source: String!

  """
  The offline content type
  """
  type: OfflineContentType!
}

enum OfflineContentType {
  IMAGE
  VIDEO
}

"""
Represents an Offline Image
"""
type OfflineImage implements OfflineContent {
  """
  The content source
  """
  source: String

  """
  The offline content type
  """
  type: OfflineContentType!

  """
  The content url
  """
  url: String
}

"""
Represents an Offline Image
"""
type OfflineVideo implements OfflineContent {
  """
  The offline video options.
  """
  options: VideoOptions!

  """
  The content source
  """
  source: String

  """
  The offline content type
  """
  type: OfflineContentType!

  """
  The content url
  """
  url: String
}

"""
Represents an Organization.
"""
type Organization {
  """
  The address of the organization.
  """
  address: String!

  """
  The address two of the organization.
  """
  addressTwo: String

  """
  The appearance of the Organization
  """
  appearance: Appearance!

  """
  The city of the organization.
  """
  city: String!

  """
  The country of the organization.
  """
  country: String!

  """
  When the organization was created.
  """
  createdAt: ISO8601DateTime!

  """
  The custom domain name for the organization, e.g. live.foo.church.
  """
  customDomain: String

  """
  Email consent of the Organization.
  """
  emailConsent: EmailConsentType

  """
  The id of the organization.
  """
  id: ID!

  """
  The links to show the user for the Organization
  """
  links: [OrganizationLink!]!

  """
  The name of the organization.
  """
  name: String!

  """
  The offline content
  """
  offlineContent: OfflineContent

  """
  The offline prayer recipients
  """
  offlinePrayerRecipients: [String!]!

  """
  The offline video URL
  """
  offlineVideoUrl: String

  """
  THe platform URL of the organization.
  """
  platformUrl: String!

  """
  Privacy url for the Organization
  """
  privacyUrl: String

  """
  The share image for the organization.
  """
  shareImage: String

  """
  The slug of the organization.
  """
  slug: String!

  """
  The slug domain of the organization.
  """
  slugDomain: String!

  """
  The state of the organization.
  """
  state: String!

  """
  The organization's approval status
  """
  status: OrganizationStatus!

  """
  The last time the organization's status was changed
  """
  statusChangedAt: ISO8601DateTime

  """
  Terms url for the Organization
  """
  termsUrl: String

  """
  The IANA timezone of the organization.
  """
  timezone: String!

  """
  The website of the organization.
  """
  website: String!

  """
  The zip code of the organization.
  """
  zip: String!
}

type OrganizationAggregate {
  count: Int!
}

"""
Attributes for creating or updating an Organization.
"""
input OrganizationInput {
  """
  The address of the Organization
  """
  address: String

  """
  The address two of the Organization
  """
  addressTwo: String

  """
  The appearance of the Organization
  """
  appearance: AppearanceInput

  """
  The city of the Organization
  """
  city: String

  """
  The country of the Organization
  """
  country: String

  """
  The custom domain name for the organization, e.g. live.foo.church.
  """
  customDomain: String

  """
  Email consent of the Organization.
  """
  emailConsent: EmailConsentType

  """
  The unique id of the organization.
  """
  id: ID

  """
  The links of the Organization
  """
  links: [LinkInput!]

  """
  The name of the Organization
  """
  name: String

  """
  The offline content
  """
  offlineContent: OfflineContentInput

  """
  The offline prayer recipients
  """
  offlinePrayerRecipients: [String!]

  """
  The offline video URL
  """
  offlineVideoUrl: String

  """
  Privacy url for the Organization
  """
  privacyUrl: String

  """
  The share image for the organization.
  """
  shareImage: String

  """
  Whether or not it is a new Organization.
  """
  signup: Boolean

  """
  The slug of the Organization
  """
  slug: String

  """
  Whether or not the slug is claimed.
  """
  slugClaimed: Boolean

  """
  The state of the Organization
  """
  state: String

  """
  Set the status of the Organization.
  """
  status: OrganizationStatus

  """
  Terms url for the Organization
  """
  termsUrl: String

  """
  The IANA timezone of the Organization
  """
  timezone: String

  """
  The website of the Organization
  """
  website: String

  """
  The zip of the Organization
  """
  zip: String
}

"""
Represents a navigation link for an organization
"""
type OrganizationLink {
  """
  The URI to send the user to
  """
  href: String! @deprecated(reason: "Utilize the URL field instead.")

  """
  The id of the link
  """
  id: ID!

  """
  The unique ID for the link
  """
  key: String!

  """
  The Label for the link
  """
  label: String!

  """
  The order of the link
  """
  order: Int!

  """
  The URI to send the user to
  """
  url: String!
}

enum OrganizationStatus {
  APPROVED
  DEACTIVATED
  PENDING
  REJECTED
}

type OrganizationsConnection {
  aggregate: OrganizationAggregate!
  organizations: [Organization!]!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!

  """
  Returns the organization scoped to the request domain.
  """
  currentOrganization: Organization

  """
  Returns default links.
  """
  links: [Link!]!

  """
  Load the organization with the given id
  """
  loadOrganization(id: ID!): Organization

  """
  Returns organizations
  """
  organizationsConnection(
    """
    If true, returns recently rejected organizations and deactivated organizations. Defaults to false.
    """
    deactivated: Boolean

    """
    Maximum number of organizations to return. Defaults to 10.
    """
    limit: Int

    """
    The offset of results for pagination. Defaults to 0.
    """
    offset: Int

    """
    The results order. Defaults to 'organizations.created_at DESC'
    """
    order: String

    """
    The search string.
    """
    search: String
  ): OrganizationsConnection!
}

"""
Attributes for requesting prayer.
"""
input RequestPrayerInput {
  """
  The requester email
  """
  email: String!

  """
  The ID of the prayer request
  """
  id: ID!

  """
  The requester message
  """
  message: String!

  """
  The requester name
  """
  name: String!
}

"""
Autogenerated return type of SaveOrganization
"""
type SaveOrganizationPayload {
  """
  A list of errors that occured when saving the organization.
  """
  errors: [Error!]!

  """
  The saved Organization.
  """
  organization: Organization
}

"""
Represents the success of a query
"""
type Success {
  """
  The errors that occurred.
  """
  errors: [Error!]!

  """
  The success of the operation
  """
  success: Boolean!
}

"""
Represents the video Options.
"""
type VideoOptions {
  """
  Whether or not to autoplay the video.
  """
  autoplay: Boolean

  """
  Whether or not to loop the video.
  """
  loop: Boolean
}

"""
Represents the video Options.
"""
input VideoOptionsInput {
  """
  Whether or not to autoplay the video.
  """
  autoplay: Boolean

  """
  Whether or not to loop the video.
  """
  loop: Boolean
}

scalar _Any

union _Entity = Organization

"""
The sdl representing the federated service capabilities. Includes federation
directives, removes federation types, and includes rest of full schema after
schema directives have been applied
"""
type _Service {
  sdl: String
}